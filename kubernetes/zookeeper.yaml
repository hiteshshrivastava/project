apiVersion: v1
kind: Service
metadata:
  name: zookeeper-headless
  labels:
    app: zookeeper
spec:
  ports:
    - name: client
      port: 2181
      targetPort: client
    - name: follower
      port: 2888
      targetPort: follower
    - name: election
      port: 3888
      targetPort: election
  clusterIP: None
  selector:
    app: zookeeper
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-cs
  labels:
    app: zookeeper
spec:
  ports:
    - name: client
      port: 2181
      targetPort: client
    - name: follower
      port: 2888
      targetPort: follower
    - name: election
      port: 3888
      targetPort: election
  selector:
    app: zookeeper
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: zookeeper-pdb
spec:
  selector:
    matchLabels:
      app: zookeeper
  maxUnavailable: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
spec:
  selector:
    matchLabels:
      app: zookeeper
  serviceName: zookeeper-headless
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        imagePullPolicy: Always
        image: "bitnami/zookeeper:latest"
        command:
          - bash
          - -ec
#          - export ZOO_SERVER_ID=$((${HOSTNAME##*-}+1)) && echo $ZOO_SERVER_ID > /bitnami/zookeeper/data/myid && exec /entrypoint.sh /run.sh
          - export ZOO_SERVER_ID=$((${HOSTNAME##*-}+1)) && exec /entrypoint.sh /run.sh
        env:
        - name: ZOO_SERVERS
          value: zookeeper-0.zookeeper-headless.project.svc.cluster.local:2888:3888, zookeeper-1.zookeeper-headless.project.svc.cluster.local:2888:3888, zookeeper-2.zookeeper-headless.project.svc.cluster.local:2888:3888
        - name: ALLOW_ANONYMOUS_LOGIN
          value: "yes"
        ports:
        - containerPort: 2181
          name: client
        volumeMounts:
        - name: data
          mountPath: /bitnami/zookeeper
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 8Gi
